buildscript {
    repositories {
        maven { url("https://files.minecraftforge.net/maven") }
        maven { url("https://libraries.minecraft.net") }
        maven { url("https://plugins.gradle.org/m2/") }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath(
            group: "net.minecraftforge.gradle",
            name: "ForgeGradle",
            version: forge_gradle_version,
            changing: true
        )
        classpath(
            "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        )
        classpath(
            "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        )
        classpath(
            "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        )
    }
}

plugins {
    id "maven-publish"
    id "java-library"
    id "maven"
}

apply(plugin: "org.jetbrains.dokka")
apply(plugin: "net.minecraftforge.gradle")
apply(plugin: "kotlin")
apply(plugin: "kotlinx-serialization")

String packagesToken = new String(package_public_token.decodeBase64())

version = module_version
group = "com.mairwunnx.$module_id"
archivesBaseName = module_name

minecraft {
    mappings(
        channel: forge_mappings_channel_type,
        version: forge_mappings_channel_version
    )

    runs {
        client {
            //noinspection GroovyAssignabilityCheck
            workingDirectory(project.file(dev_run_client_path))
            property("forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP")
            property("forge.logging.console.level", "debug")
            mods {
                ProjectEssentialsHome {
                    //noinspection GroovyAssignabilityCheck
                    source(sourceSets.main)
                }
            }
        }

        server {
            //noinspection GroovyAssignabilityCheck
            workingDirectory(project.file(dev_run_server_path))
            property("forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP")
            property("forge.logging.console.level", "debug")
            mods {
                ProjectEssentialsHome {
                    //noinspection GroovyAssignabilityCheck
                    source(sourceSets.main)
                }
            }
        }
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven { url("https://libraries.minecraft.net") }
    maven { url "https://jitpack.io" }
    maven {
        name = "GitHubPackages"
        url = uri "https://maven.pkg.github.com/projectessentials/projectessentials-core"
        credentials {
            username = "MairwunNx@gmail.com"
            password = packagesToken
        }
    }
    maven {
        name = "GitHubPackages"
        url = uri "https://maven.pkg.github.com/projectessentials/projectessentials-permissions"
        credentials {
            username = "MairwunNx@gmail.com"
            password = packagesToken
        }
    }
    maven {
        name = "GitHubPackages"
        url = uri "https://maven.pkg.github.com/ProjectEssentials/ProjectEssentials-Cooldown"
        credentials {
            username = "MairwunNx@gmail.com"
            password = packagesToken
        }
    }
}

dependencies {
    minecraft(group: "net.minecraftforge", name: "forge", version: forge_version)

    implementation 'com.mairwunnx.project_essentials_core:ProjectEssentials-Core:1.14.4-1.3.0'
    implementation 'com.mairwunnx.project_essentials_permissions:ProjectEssentials-Permissions:1.14.4-1.2.1'
    implementation 'com.mairwunnx.project_essentials_cooldown:ProjectEssentials-Cooldown:1.14.4-1.0.4'

    implementation(group: "com.mojang", name: "brigadier", version: brigadier_version)
    implementation(
        group: "org.jetbrains.kotlinx",
        name: "kotlinx-serialization-runtime",
        version: kotlinx_serialization_version
    )
    implementation(
        group: "org.jetbrains.kotlin",
        name: "kotlin-stdlib-$kotlin_jdk_version_target",
        version: kotlin_version
    )
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/libs/docs"
}

project.tasks["jar"].dependsOn(project.tasks["dokka"])

jar {
    manifest {
        attributes([
            "Specification-Title"     : module_name,
            "Specification-Vendor"    : module_vendor,
            "Specification-Version"   : module_version,
            "Implementation-Title"    : module_name,
            "Implementation-Version"  : module_version,
            "Implementation-Vendor"   : module_vendor,
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

sourceCompatibility = targetCompatibility =
    compileJava.sourceCompatibility =
        compileJava.targetCompatibility = project_jvm_version_target

compileKotlin.kotlinOptions.jvmTarget =
    compileTestKotlin.kotlinOptions.jvmTarget = project_jvm_version_target

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task dokkaJar(type: Jar) {
    group = JavaBasePlugin.DOCUMENTATION_GROUP
    description = "Assembles Kotlin docs with Dokka"
    classifier = "javadoc"
    from tasks.dokka as Object
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri "https://maven.pkg.github.com/projectessentials/projectessentials-home"
            credentials {
                username = System.getenv("GradleUser")
                password = System.getenv("GradlePass")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact dokkaJar
        }
    }
}
